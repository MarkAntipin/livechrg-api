  name: ci

  on:
    pull_request:
      branches: [ master ]

    push:
      branches: [ ci ]

  jobs:
    ci:
      runs-on: ubuntu-latest

      services:
        postgres:
          image: postgres
          env:
            POSTGRES_USER: livechrg-api
            POSTGRES_PASSWORD: livechrg-api
            POSTGRES_DB: livechrg-api
          ports:
            - 5437:5432
          options:
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'

        - name: Install poetry
          uses: snok/install-poetry@v1

        - name: Install dependencies
          run: poetry install --no-interaction --no-root

        - name: Run linter
          run: poetry run ruff check .

        - name: Run unit tests
          run: poetry run pytest -v tests

        - name: Install golang-migrate
          run: |
            curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | 
            tar xvz;
            sudo mv migrate /usr/bin/migrate;
            which migrate

        - name: Apply migrations
          run: migrate -path ./migrations -database "postgres://livechrg-api:livechrg-api@localhost:5437/livechrg-api?sslmode=disable" up
          env:
            POSTGRES_USER: livechrg-api
            POSTGRES_PASSWORD: livechrg-api
            POSTGRES_PORT: 5432
            POSTGRES_DB: livechrg-api

        - name: Run functional tests
          run: poetry run pytest -v tests_functional